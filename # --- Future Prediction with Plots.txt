# --- Future Prediction with Plots ---

# You can change these values to represent different future situations
future_scenarios = pd.DataFrame({
    'Living_Cost_Index': [120, 150, 90],
    'Duration_Years': [4, 3, 5]
})

print("\nHypothetical Future Scenarios:")
print(future_scenarios)

# Note: The scaler was fitted on X_cluster for clustering, but we should ideally fit a scaler on X_train
# Let's refit a scaler specifically for the features used in regression
scaler_reg = StandardScaler()
X_train_scaled_reg = scaler_reg.fit_transform(X_train)
future_scenarios_scaled = scaler_reg.transform(future_scenarios)

# So we use the original future_scenarios DataFrame for prediction with the model trained on unscaled data
future_predictions = knn_model.predict(future_scenarios)

print("\nPredicted Tuition Costs for Future Scenarios (USD):")
print(future_predictions)

# Visualize the original data points and the future predictions

plt.figure(figsize=(12, 7))

# Plot original training data
plt.scatter(X_train['Living_Cost_Index'], y_train, alpha=0.6, label='Training Data', color='skyblue')
plt.scatter(X_test['Living_Cost_Index'], y_test, alpha=0.6, label='Test Data', color='lightcoral')


# Plot the future prediction points
plt.scatter(future_scenarios['Living_Cost_Index'], future_predictions, color='red', marker='X', s=150, label='Future Predictions', zorder=5)


# Add labels and title
plt.xlabel('Living Cost Index')
plt.ylabel('Tuition (USD)')
plt.title('Tuition Prediction for Future Scenarios (based on Living Cost Index)')
plt.legend()
plt.grid(True)
plt.show()

# You can create another plot showing the relationship with Duration_Years if needed
plt.figure(figsize=(12, 7))

# Plot original training data
plt.scatter(X_train['Duration_Years'], y_train, alpha=0.6, label='Training Data', color='skyblue')
plt.scatter(X_test['Duration_Years'], y_test, alpha=0.6, label='Test Data', color='lightcoral')

# Plot the future prediction points
plt.scatter(future_scenarios['Duration_Years'], future_predictions, color='red', marker='X', s=150, label='Future Predictions', zorder=5)

# Add labels and title
plt.xlabel('Duration (Years)')
plt.ylabel('Tuition (USD)')
plt.title('Tuition Prediction for Future Scenarios (based on Duration Years)')
plt.legend()
plt.grid(True)
plt.show()